{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","contacts","name","number","handleNameChange","evt","setState","currentTarget","value","handleNumberChange","this","type","pattern","title","required","onChange","Component","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEMA,E,4MAKJC,MAAQ,CACNC,SAAU,GACVC,KAAM,GACNC,OAAQ,I,EAGVC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CACZJ,KAAMG,EAAIE,cAAcC,S,EAI5BC,mBAAqB,SAACJ,GACpB,EAAKC,SAAS,CACZH,OAAQE,EAAIE,cAAcC,S,4CAI9B,WACE,OACE,gCACE,2CACA,iCACE,yCAEE,uBACEA,MAAOE,KAAKV,MAAME,KAClBS,KAAK,OACLT,KAAK,OACLU,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUL,KAAKN,sBAInB,2CAEE,uBACEI,MAAOE,KAAKV,MAAMG,OAClBQ,KAAK,MACLT,KAAK,SACLU,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUL,KAAKD,wBAGnB,wBACEE,KAAK,SADP,4BASF,gCACE,0CACA,6BACE,uD,GAjEMK,aAAZjB,EACGkB,aAAe,GAuETlB,QC9DAmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a8502868.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass App extends Component {\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n\n  handleNameChange = (evt) => {\n    this.setState({\n      name: evt.currentTarget.value,\n    });\n  };\n\n  handleNumberChange = (evt) => {\n    this.setState({\n      number: evt.currentTarget.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <form>\n          <label>\n          Name\n            <input\n              value={this.state.name}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleNameChange}\n            />\n          </label>\n\n          <label>\n            Number\n            <input\n              value={this.state.number}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.handleNumberChange}\n            />\n          </label>\n          <button\n            type=\"button\"\n\n          >\n            Add contact\n          </button>\n\n        </form>\n\n        <div>\n          <h2>Contacts</h2>\n          <ul>\n            <li>Yaroslava</li>\n          </ul>\n        </div>\n      </div>\n    )}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}